{"uid":"62176b15e7cb0634","name":"Create a new book with missing mandatory fields - author","fullName":"features/book_post.feature:26","historyId":"d1fe438d9eee1dc443ba3e4031c8888f","time":{"start":1735943210654,"stop":1735943210758,"duration":104},"status":"failed","statusMessage":"expected:<201> but was:<400>","statusTrace":"java.lang.AssertionError: expected:<201> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat org.example.itqaassitgnment.stepdefinitions.BookPostStepDefinitions.theResponseStatusShouldBe(BookPostStepDefinitions.java:53)\n\tat ✽.the response status should be 400(classpath:features/book_post.feature:37)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"expected:<201> but was:<400>","statusTrace":"java.lang.AssertionError: expected:<201> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat org.example.itqaassitgnment.stepdefinitions.BookPostStepDefinitions.theResponseStatusShouldBe(BookPostStepDefinitions.java:53)\n\tat ✽.the response status should be 400(classpath:features/book_post.feature:37)\n","steps":[{"name":"Given  the API endpoint is \"/api/books\"","time":{"start":1735943210654,"stop":1735943210655,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And  the request body is:","time":{"start":1735943210655,"stop":1735943210655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And  the Basic Authentication username is \"user\" and password is \"password\"","time":{"start":1735943210655,"stop":1735943210656,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When  I send a POST request","time":{"start":1735943210656,"stop":1735943210754,"duration":98},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then  the response status should be 400","time":{"start":1735943210754,"stop":1735943210757,"duration":3},"status":"failed","statusMessage":"expected:<201> but was:<400>","statusTrace":"java.lang.AssertionError: expected:<201> but was:<400>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat org.example.itqaassitgnment.stepdefinitions.BookPostStepDefinitions.theResponseStatusShouldBe(BookPostStepDefinitions.java:53)\n\tat ✽.the response status should be 400(classpath:features/book_post.feature:37)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"And  the response should contain:","time":{"start":1735943210758,"stop":1735943210758,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az807-413"},{"name":"thread","value":"3167@fv-az807-413.main(1)"},{"name":"feature","value":"Book POST API"},{"name":"story","value":"Create a new book with missing mandatory fields - author"},{"name":"suite","value":"Book POST API"},{"name":"testClass","value":"Create a new book with missing mandatory fields - author"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/book_post.feature"},{"name":"package","value":"features.book_post_feature.Book POST API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"62176b15e7cb0634.json","parameterValues":[]}